server:
  address: 0.0.0.0
  port: 8082
spring:
  application:
    name: bit-service-approval
  profiles:
    active: sit
  #  webflux:
  #    base-path: /bit-service-approval
  output:
    ansi:
      enabled: ALWAYS
  jmx:
    enabled: false
  mvc:
    throw-exception-if-no-handler-found: true
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
    web-application-type: reactive
  sql:
    init:
      mode: never
      platform: postgres
  web:
    resources:
      add-mappings: false
  banner:
    location: custom-banner.txt

#  cloud:
#    config:
#      #      name: ${APP_NAME:bit-service-approval}
#      #      discovery:
#      #        enabled: true
#      #        service-id: config-server
#      uri: ${CONFIG_URL:http://10.1.0.174:8800}
#      fail-fast: true
#      retry:
#        max-attempts: 20
#        max-interval: 15000
#        initial-interval: 10000
  cloud:
    openfeign:
      httpclient:
        hc5:
          enabled: true
    refresh:
      extra-refreshable: com.zaxxer.hikari.HikariDataSource
    bus:
      enabled: false
      refresh:
        enabled: true
      env:
        enabled: true
    stream:
      kafka:
        binder:
          # brokers:
          autoAddPartitions: true
          autoCreateTopics: true
          # zkNodes: ${KAFKA_ZKNODES:10.1.0.202:2181}
          # brokers: ${KAFKA_BROKERS:10.1.0.202:9092}
    loadbalancer:
      ribbon:
        enabled: false
      cache:
        enabled: false
        ttl: 300s
        capacity: 1024

  cache:
    type: redis
    cache-names: >-
      bit-service-approval
    redis:
      time-to-live: 300000
      enable-statistics: true
      key-prefix: bit-service-approval
      use-key-prefix: true

  jpa:
    database: POSTGRESQL
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hypersistence:
        utils:
          enable_types_contributor: true
      org:
        hibernate:
          envers:
            store_data_at_delete: true
            do_not_audit_optimistic_locking_field: false
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        id:
          db_structure_naming_strategy: legacy
        cache:
          use_second_level_cache: true
          use_structured_entries: true
          redisson:
            config: redisson-sit.yml
            b2b-account-l2:
              expiration:
                time_to_live: 60000
                max_idle_time: 60000
          region_prefix: bit-service-approval-l2
          region:
            factory_class: org.redisson.hibernate.RedissonRegionFactory
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 100
      javax:
        persistence:
          validation:
            mode: none

  graphql:
    graphiql:
      enabled: true

  redis:
    host: 10.1.0.184
    password:
    port: 6379
    defaultExpire: 600000
    pool:
      max-idle: 8
      min-idle: 0
      max-active: -1
      max-wait: -1
    cluster:
      nodes: >-
        b2b-redis-sit-0001-001.mumvjr.0001.apse1.cache.amazonaws.com:6379

  datasource:
    platform: postgres
    url: jdbc:postgresql://b2b-sit.cc2jtqqitlmv.ap-southeast-1.rds.amazonaws.com:5432/BIT_SERVICE_APPROVAL_SIT
    driverClassName: org.postgresql.Driver
    username: postgres
    password: B2BCocaCola
    hikari:
      minimumIdle: 1
      maximumPoolSize: 32
      idleTimeout: 10000
      connectionTimeout: 300000
      leakDetectionThreshold: 300000
      connection-test-query: SELECT 1
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: public
        current_session_context_class: thread
        format_sql: true
      javax:
        persistence:
          validation:
            mode: none
    configuration:
      maximum-pool-size: 32

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login-sit.bhakti.co.id:8443/realms/bit
#      token:
#        validity-seconds: 3600
#        refresh-validity-seconds: 10800
      whitelist-path:
        - /swagger-ui/**


eureka:
  client:
    enabled: true
    order: 8
    region: ap-southeast-1
    register-with-eureka: true
    fetch-registry: true
    preferSameZoneEureka: true
    heartbeat-executor-thread-pool-size: 8
    webclient:
      enabled: true
    refresh:
      enable: false
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://10.1.0.174:8761/eureka}
  instance:
    prefer-ip-address: true
    securePortEnabled: false
    nonSecurePortEnabled: true
    nonSecurePort: 7000
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30
    health-check-url-path: /bit-service-approval/actuator/health
    metadataMap:
      zone: ${EUREKA_ZONE:on-premise}

springdoc:
  # packagesToScan: com.bit.microservices.model, com.bit.microservices.va_bca
  # pre-loading-enabled: true
  webjars:
    prefix: null
  api-docs:
    version: OPENAPI_3_0
    # resolve-schema-properties: true
    enabled: true
    #   groups:
    #     enabled: true
    #   enable-default-api-docs: false
    # path: /bit-service-approval/v3/api-docs
  swagger-ui:
    #    use-root-path: false
    enabled: true
    path: /bit-service-approval/swagger-ui.html
    url: /bit-service-approval/v3/api-docs
    # configUrl: /v3/api-docs/swagger-config

logging:
  level:
    root: INFO
  config: classpath:logback-${ACTIVE_PROFILE:sit}.xml

kafka:
  config:
    bootstrap-servers: >-
      10.1.0.174:7129,
      10.1.0.184:7129,
      10.1.0.202:7129
    sasl-protocol: SASL_PLAINTEXT
    sasl-method: SCRAM-SHA-512
    username: admin
    password: admin-secret
